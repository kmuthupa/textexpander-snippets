<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>groupInfo</key>
	<dict>
		<key>expandAfterMode</key>
		<integer>0</integer>
		<key>groupName</key>
		<string>JavaScript</string>
		<key>notes</key>
		<string></string>
	</dict>
	<key>snippetsTE2</key>
	<array>
		<dict>
			<key>abbreviation</key>
			<string>,jsextend</string>
			<key>abbreviationMode</key>
			<integer>0</integer>
			<key>creationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>label</key>
			<string></string>
			<key>modificationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>plainText</key>
			<string>function extend(destination, source) {
    var toString = Object.prototype.toString,
        objTest = toString.call({});
    for (var property in source) {
        if (source[property] &amp;&amp; objTest == toString.call(source[property])) {
            destination[property] = destination[property] || {};
            extend(destination[property], source[property]);
        } else {
            destination[property] = source[property];
        }
    }
    return destination;
};</string>
			<key>snippetType</key>
			<integer>0</integer>
			<key>uuidString</key>
			<string>C6CD1A90-B0D2-11E6-8375-5F38640B11C1</string>
		</dict>
		<dict>
			<key>abbreviation</key>
			<string>,jspreventhover</string>
			<key>abbreviationMode</key>
			<integer>0</integer>
			<key>creationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>label</key>
			<string>Prevent Hover On Scroll</string>
			<key>modificationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>plainText</key>
			<string>var body = document.body,
    scrollTimer;

window.addEventListener('scroll', function() {
  clearTimeout(scrollTimer);
  if(!body.classList.contains('disable-hover')) {
    body.classList.add('disable-hover');
  }
  
  scrollTimer = setTimeout(function(){
    body.classList.remove('disable-hover');
  }, 500);
}, false);

/*
.disable-hover,
.disable-hover * {
  pointer-events: none !important;
}
*/</string>
			<key>snippetType</key>
			<integer>0</integer>
			<key>uuidString</key>
			<string>C6F9CFE0-B0D2-11E6-8375-5F38640B11C1</string>
		</dict>
		<dict>
			<key>abbreviation</key>
			<string>,jsaddcssrule</string>
			<key>abbreviationMode</key>
			<integer>0</integer>
			<key>creationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>label</key>
			<string></string>
			<key>modificationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>plainText</key>
			<string>function addCssRule(sheet, selector, rules, index) {
  if(sheet.insertRule) {
    sheet.insertRule(selector + "{" + rules + "}", index);
  }
  else {
    sheet.addRule(selector, rules, index);
  }
}

// addCssRule(document.styleSheets[0], '', '');</string>
			<key>snippetType</key>
			<integer>0</integer>
			<key>uuidString</key>
			<string>C70CBBA0-B0D2-11E6-8375-5F38640B11C1</string>
		</dict>
		<dict>
			<key>abbreviation</key>
			<string>,jsevtdel</string>
			<key>abbreviationMode</key>
			<integer>0</integer>
			<key>creationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>label</key>
			<string>Event Delegation</string>
			<key>modificationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>plainText</key>
			<string>el.addEventListener("click",function(e) {
  if(e.target &amp;&amp; e.target.nodeName == "%|") {
    // ...
  }
});</string>
			<key>snippetType</key>
			<integer>0</integer>
			<key>uuidString</key>
			<string>C736D8E0-B0D2-11E6-8375-5F38640B11C1</string>
		</dict>
		<dict>
			<key>abbreviation</key>
			<string>,jsajaxcache</string>
			<key>abbreviationMode</key>
			<integer>0</integer>
			<key>creationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>label</key>
			<string>jQuery Ajax Cache</string>
			<key>modificationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>plainText</key>
			<string>var ajaxCache = {};

$('#ajaxForm').on('submit', function(e) {
  var key = $('#field').val(); // get a key to store/cache for lookup

  if ( !ajaxCache[key] ) {
    ajaxCache[key] = $.ajax({
      url: 'http://',
      dataType: 'jsonp',
      data: {},
      timeout: 15000
    });
  }
  ajaxCache[key].done().fail().always();

  e.preventDefault();
});</string>
			<key>snippetType</key>
			<integer>0</integer>
			<key>uuidString</key>
			<string>C7483E00-B0D2-11E6-8375-5F38640B11C1</string>
		</dict>
		<dict>
			<key>abbreviation</key>
			<string>,keycheck</string>
			<key>abbreviationMode</key>
			<integer>0</integer>
			<key>creationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>label</key>
			<string>Key Check</string>
			<key>modificationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>plainText</key>
			<string>if("%filltext:name=Feature%" in navigator) {
    %|
}</string>
			<key>snippetType</key>
			<integer>0</integer>
			<key>uuidString</key>
			<string>C758DFD0-B0D2-11E6-8375-5F38640B11C1</string>
		</dict>
		<dict>
			<key>abbreviation</key>
			<string>,jstypeof</string>
			<key>abbreviationMode</key>
			<integer>0</integer>
			<key>creationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>label</key>
			<string>typeOf</string>
			<key>modificationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>plainText</key>
			<string>function typeOf(value) {
    var s = typeof value;
    if (s === 'object') {
        if (value) {
            if (value instanceof Array) {
                s = 'array';
            }
        } else {
            s = 'null';
        }
    }
    return s;
}</string>
			<key>snippetType</key>
			<integer>0</integer>
			<key>uuidString</key>
			<string>C7773D40-B0D2-11E6-8375-5F38640B11C1</string>
		</dict>
		<dict>
			<key>abbreviation</key>
			<string>,jsrect</string>
			<key>abbreviationMode</key>
			<integer>0</integer>
			<key>creationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>label</key>
			<string>Get el bounding rect</string>
			<key>modificationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>plainText</key>
			<string>var %filltext:name=elRect% = document.querySelector('%|').getBoundingClientRect();</string>
			<key>snippetType</key>
			<integer>0</integer>
			<key>uuidString</key>
			<string>C7952580-B0D2-11E6-8375-5F38640B11C1</string>
		</dict>
		<dict>
			<key>abbreviation</key>
			<string>,jshintrc</string>
			<key>abbreviationMode</key>
			<integer>0</integer>
			<key>creationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>label</key>
			<string>JSHint Config File</string>
			<key>modificationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>plainText</key>
			<string>{
  // JSHint Default Configuration File (as on JSHint website)
  // See http://jshint.com/docs/ for more details

  "maxerr"        : 50,       // {int} Maximum error before stopping

  // Enforcing
  "bitwise"       : true,     // true: Prohibit bitwise operators (&amp;, |, ^, etc.)
  "camelcase"     : false,    // true: Identifiers must be in camelCase
  "curly"         : true,     // true: Require {} for every new block or scope
  "eqeqeq"        : true,     // true: Require triple equals (===) for comparison
  "forin"         : true,     // true: Require filtering for..in loops with obj.hasOwnProperty()
  "immed"         : false,    // true: Require immediate invocations to be wrapped in parens e.g. `(function () { } ());`
  "indent"        : 4,        // {int} Number of spaces to use for indentation
  "latedef"       : false,    // true: Require variables/functions to be defined before being used
  "newcap"        : false,    // true: Require capitalization of all constructor functions e.g. `new F()`
  "noarg"         : true,     // true: Prohibit use of `arguments.caller` and `arguments.callee`
  "noempty"       : true,     // true: Prohibit use of empty blocks
  "nonew"         : false,    // true: Prohibit use of constructors for side-effects (without assignment)
  "plusplus"      : false,    // true: Prohibit use of `++` &amp; `--`
  "quotmark"      : false,    // Quotation mark consistency:
                              //   false    : do nothing (default)
                              //   true     : ensure whatever is used is consistent
                              //   "single" : require single quotes
                              //   "double" : require double quotes
  "undef"         : true,     // true: Require all non-global variables to be declared (prevents global leaks)
  "unused"        : true,     // true: Require all defined variables be used
  "strict"        : true,     // true: Requires all functions run in ES5 Strict Mode
  "trailing"      : false,    // true: Prohibit trailing whitespaces
  "maxparams"     : false,    // {int} Max number of formal params allowed per function
  "maxdepth"      : false,    // {int} Max depth of nested blocks (within functions)
  "maxstatements" : false,    // {int} Max number statements per function
  "maxcomplexity" : false,    // {int} Max cyclomatic complexity per function
  "maxlen"        : false,    // {int} Max number of characters per line

  // Relaxing
  "asi"           : false,     // true: Tolerate Automatic Semicolon Insertion (no semicolons)
  "boss"          : false,     // true: Tolerate assignments where comparisons would be expected
  "debug"         : false,     // true: Allow debugger statements e.g. browser breakpoints.
  "eqnull"        : false,     // true: Tolerate use of `== null`
  "es5"           : false,     // true: Allow ES5 syntax (ex: getters and setters)
  "esnext"        : false,     // true: Allow ES.next (ES6) syntax (ex: `const`)
  "moz"           : false,     // true: Allow Mozilla specific syntax (extends and overrides esnext features)
                               // (ex: `for each`, multiple try/catch, function expressionâ€¦)
  "evil"          : false,     // true: Tolerate use of `eval` and `new Function()`
  "expr"          : false,     // true: Tolerate `ExpressionStatement` as Programs
  "funcscope"     : false,     // true: Tolerate defining variables inside control statements"
  "globalstrict"  : false,     // true: Allow global "use strict" (also enables 'strict')
  "iterator"      : false,     // true: Tolerate using the `__iterator__` property
  "lastsemic"     : false,     // true: Tolerate omitting a semicolon for the last statement of a 1-line block
  "laxbreak"      : false,     // true: Tolerate possibly unsafe line breakings
  "laxcomma"      : false,     // true: Tolerate comma-first style coding
  "loopfunc"      : false,     // true: Tolerate functions being defined in loops
  "multistr"      : false,     // true: Tolerate multi-line strings
  "proto"         : false,     // true: Tolerate using the `__proto__` property
  "scripturl"     : false,     // true: Tolerate script-targeted URLs
  "smarttabs"     : false,     // true: Tolerate mixed tabs/spaces when used for alignment
  "shadow"        : false,     // true: Allows re-define variables later in code e.g. `var x=1; x=2;`
  "sub"           : false,     // true: Tolerate using `[]` notation when it can still be expressed in dot notation
  "supernew"      : false,     // true: Tolerate `new function () { ... };` and `new Object;`
  "validthis"     : false,     // true: Tolerate using this in a non-constructor function

  // Environments
  "browser"       : true,     // Web Browser (window, document, etc)
  "couch"         : false,    // CouchDB
  "devel"         : true,     // Development/debugging (alert, confirm, etc)
  "dojo"          : false,    // Dojo Toolkit
  "jquery"        : false,    // jQuery
  "mootools"      : false,    // MooTools
  "node"          : false,    // Node.js
  "nonstandard"   : false,    // Widely adopted globals (escape, unescape, etc)
  "prototypejs"   : false,    // Prototype and Scriptaculous
  "rhino"         : false,    // Rhino
  "worker"        : false,    // Web Workers
  "wsh"           : false,    // Windows Scripting Host
  "yui"           : false,    // Yahoo User Interface

  // Legacy
  "nomen"         : false,    // true: Prohibit dangling `_` in variables
  "onevar"        : false,    // true: Allow only one `var` statement per function
  "passfail"      : false,    // true: Stop on first error
  "white"         : false,    // true: Check against strict whitespace and indentation rules

  // Custom Globals
  "predef"        : [ ]       // additional predefined global variables
}</string>
			<key>snippetType</key>
			<integer>0</integer>
			<key>uuidString</key>
			<string>C7B30DC0-B0D2-11E6-8375-5F38640B11C1</string>
		</dict>
		<dict>
			<key>abbreviation</key>
			<string>,jsdelete</string>
			<key>abbreviationMode</key>
			<integer>0</integer>
			<key>creationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>label</key>
			<string>Remove Elem</string>
			<key>modificationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>plainText</key>
			<string>document.querySelector('%filltext:name=elem%').parentNode.removeChild(document.querySelector('%filltext:name=elem%'))</string>
			<key>snippetType</key>
			<integer>0</integer>
			<key>uuidString</key>
			<string>C7D19240-B0D2-11E6-8375-5F38640B11C1</string>
		</dict>
		<dict>
			<key>abbreviation</key>
			<string>,jsafter</string>
			<key>abbreviationMode</key>
			<integer>0</integer>
			<key>creationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>label</key>
			<string>Add After Elem</string>
			<key>modificationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>plainText</key>
			<string>document.querySelector('%|').insertAdjacentHTML('afterend', '&lt;div&gt;&lt;/div&gt;')</string>
			<key>snippetType</key>
			<integer>0</integer>
			<key>uuidString</key>
			<string>C7F016C0-B0D2-11E6-8375-5F38640B11C1</string>
		</dict>
		<dict>
			<key>abbreviation</key>
			<string>,jsbefore</string>
			<key>abbreviationMode</key>
			<integer>0</integer>
			<key>creationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>label</key>
			<string>Add Before Elem</string>
			<key>modificationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>plainText</key>
			<string>document.querySelector('%|').insertAdjacentHTML('beforebegin', '&lt;div&gt;&lt;/div&gt;')</string>
			<key>snippetType</key>
			<integer>0</integer>
			<key>uuidString</key>
			<string>C80DFF00-B0D2-11E6-8375-5F38640B11C1</string>
		</dict>
		<dict>
			<key>abbreviation</key>
			<string>,jsprepend</string>
			<key>abbreviationMode</key>
			<integer>0</integer>
			<key>creationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>label</key>
			<string>Prepend Elem</string>
			<key>modificationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>plainText</key>
			<string>document.querySelector('%|').insertAdjacentHTML('afterbegin', '&lt;div&gt;&lt;/div&gt;')</string>
			<key>snippetType</key>
			<integer>0</integer>
			<key>uuidString</key>
			<string>C82E3130-B0D2-11E6-8375-5F38640B11C1</string>
		</dict>
		<dict>
			<key>abbreviation</key>
			<string>,jsappend</string>
			<key>abbreviationMode</key>
			<integer>0</integer>
			<key>creationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>label</key>
			<string>Append Elem</string>
			<key>modificationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>plainText</key>
			<string>document.querySelector('%|').insertAdjacentHTML('beforeend', '&lt;div&gt;&lt;/div&gt;')</string>
			<key>snippetType</key>
			<integer>0</integer>
			<key>uuidString</key>
			<string>C84BA440-B0D2-11E6-8375-5F38640B11C1</string>
		</dict>
		<dict>
			<key>abbreviation</key>
			<string>,jstoggleclass</string>
			<key>abbreviationMode</key>
			<integer>0</integer>
			<key>creationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>label</key>
			<string>Toggle Class</string>
			<key>modificationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>plainText</key>
			<string>function toggleClass(elem, className) {
  var newClass = ' ' + elem.className.replace( /[\t\r\n]/g, ' ' ) + ' ';
  if (hasClass(elem, className)) {
    while (newClass.indexOf(' ' + className + ' ') &gt;= 0 ) {
      newClass = newClass.replace( ' ' + className + ' ' , ' ' );
    }
    elem.className = newClass.replace(/^\s+|\s+$/g, '');
  } else {
    elem.className += ' ' + className;
  }
}</string>
			<key>snippetType</key>
			<integer>0</integer>
			<key>uuidString</key>
			<string>C86BAF60-B0D2-11E6-8375-5F38640B11C1</string>
		</dict>
		<dict>
			<key>abbreviation</key>
			<string>,jsnext</string>
			<key>abbreviationMode</key>
			<integer>0</integer>
			<key>creationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>label</key>
			<string>Next Sibling</string>
			<key>modificationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>plainText</key>
			<string>var next = document.querySelector('%|').nextSibling;
while( next.nodeType &gt; 1 ) next = next.nextSibling</string>
			<key>snippetType</key>
			<integer>0</integer>
			<key>uuidString</key>
			<string>C88A8200-B0D2-11E6-8375-5F38640B11C1</string>
		</dict>
		<dict>
			<key>abbreviation</key>
			<string>,jsparent</string>
			<key>abbreviationMode</key>
			<integer>0</integer>
			<key>creationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>label</key>
			<string>Parent Node</string>
			<key>modificationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>plainText</key>
			<string>document.querySelector('%|').parentNode</string>
			<key>snippetType</key>
			<integer>0</integer>
			<key>uuidString</key>
			<string>C8B53B80-B0D2-11E6-8375-5F38640B11C1</string>
		</dict>
		<dict>
			<key>abbreviation</key>
			<string>,jsidelem</string>
			<key>abbreviationMode</key>
			<integer>0</integer>
			<key>creationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>label</key>
			<string>getElementById</string>
			<key>modificationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>plainText</key>
			<string>document.getElementById('%|');</string>
			<key>snippetType</key>
			<integer>0</integer>
			<key>uuidString</key>
			<string>C8D34AD0-B0D2-11E6-8375-5F38640B11C1</string>
		</dict>
		<dict>
			<key>abbreviation</key>
			<string>,jsquery</string>
			<key>abbreviationMode</key>
			<integer>0</integer>
			<key>creationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>label</key>
			<string>querySelectorAll</string>
			<key>modificationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>plainText</key>
			<string>document.querySelectorAll('%|');</string>
			<key>snippetType</key>
			<integer>0</integer>
			<key>uuidString</key>
			<string>C8F37D00-B0D2-11E6-8375-5F38640B11C1</string>
		</dict>
		<dict>
			<key>abbreviation</key>
			<string></string>
			<key>abbreviationMode</key>
			<integer>0</integer>
			<key>creationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>label</key>
			<string>Remove Hover Styles on iOS</string>
			<key>modificationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>plainText</key>
			<string>if ('createTouch' in document)
{
    try
    {
        var ignore = /:hover/;
        for (var i=0; i&lt;document.styleSheets.length; i++)
        {
            var sheet = document.styleSheets[i];
            for (var j=sheet.cssRules.length-1; j&gt;=0; j--)
            {
                var rule = sheet.cssRules[j];
                if (rule.type === CSSRule.STYLE_RULE &amp;&amp; ignore.test(rule.selectorText))
                {
                    sheet.deleteRule(j);
                }
            }
        }
    }
    catch(e){}
}</string>
			<key>snippetType</key>
			<integer>0</integer>
			<key>uuidString</key>
			<string>C90F6970-B0D2-11E6-8375-5F38640B11C1</string>
		</dict>
		<dict>
			<key>abbreviation</key>
			<string>,congroup</string>
			<key>abbreviationMode</key>
			<integer>0</integer>
			<key>creationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>label</key>
			<string>console.group()</string>
			<key>modificationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>plainText</key>
			<string>console.group('%|');
// ...
console.groupEnd();</string>
			<key>snippetType</key>
			<integer>0</integer>
			<key>uuidString</key>
			<string>C92E1500-B0D2-11E6-8375-5F38640B11C1</string>
		</dict>
		<dict>
			<key>abbreviation</key>
			<string>,contime</string>
			<key>abbreviationMode</key>
			<integer>0</integer>
			<key>creationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>label</key>
			<string>console.time()</string>
			<key>modificationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>plainText</key>
			<string>console.time('%filltext:name=label%');
// â€¦ %|
console.timeEnd('%filltext:name=label%');</string>
			<key>snippetType</key>
			<integer>0</integer>
			<key>uuidString</key>
			<string>C9504300-B0D2-11E6-8375-5F38640B11C1</string>
		</dict>
		<dict>
			<key>abbreviation</key>
			<string>,conassert</string>
			<key>abbreviationMode</key>
			<integer>0</integer>
			<key>creationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>label</key>
			<string>console.assert()</string>
			<key>modificationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>plainText</key>
			<string>console.assert(condition, '');</string>
			<key>snippetType</key>
			<integer>0</integer>
			<key>uuidString</key>
			<string>C97C5C10-B0D2-11E6-8375-5F38640B11C1</string>
		</dict>
		<dict>
			<key>abbreviation</key>
			<string>,conerror</string>
			<key>abbreviationMode</key>
			<integer>0</integer>
			<key>creationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>label</key>
			<string>console.error()</string>
			<key>modificationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>plainText</key>
			<string>console.error('%|');</string>
			<key>snippetType</key>
			<integer>0</integer>
			<key>uuidString</key>
			<string>C99BF200-B0D2-11E6-8375-5F38640B11C1</string>
		</dict>
		<dict>
			<key>abbreviation</key>
			<string>,conwarn</string>
			<key>abbreviationMode</key>
			<integer>0</integer>
			<key>creationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>label</key>
			<string>console.warn()</string>
			<key>modificationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>plainText</key>
			<string>console.warn('%|');</string>
			<key>snippetType</key>
			<integer>0</integer>
			<key>uuidString</key>
			<string>C9B9B330-B0D2-11E6-8375-5F38640B11C1</string>
		</dict>
		<dict>
			<key>abbreviation</key>
			<string>,Oconlog</string>
			<key>abbreviationMode</key>
			<integer>0</integer>
			<key>creationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>label</key>
			<string>console.log() JS object</string>
			<key>modificationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>plainText</key>
			<string>console.log('%O', %|);</string>
			<key>snippetType</key>
			<integer>0</integer>
			<key>uuidString</key>
			<string>C9D74D50-B0D2-11E6-8375-5F38640B11C1</string>
		</dict>
		<dict>
			<key>abbreviation</key>
			<string>,oconlog</string>
			<key>abbreviationMode</key>
			<integer>0</integer>
			<key>creationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>label</key>
			<string>console.log() DOM element</string>
			<key>modificationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>plainText</key>
			<string>console.log('%o', %|);</string>
			<key>snippetType</key>
			<integer>0</integer>
			<key>uuidString</key>
			<string>C9E94EB0-B0D2-11E6-8375-5F38640B11C1</string>
		</dict>
		<dict>
			<key>abbreviation</key>
			<string>,cconlog</string>
			<key>abbreviationMode</key>
			<integer>0</integer>
			<key>creationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>label</key>
			<string>console.log() Styled</string>
			<key>modificationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>plainText</key>
			<string>console.log('%c%|', 'color: blue;');</string>
			<key>snippetType</key>
			<integer>0</integer>
			<key>uuidString</key>
			<string>CA070FE0-B0D2-11E6-8375-5F38640B11C1</string>
		</dict>
		<dict>
			<key>abbreviation</key>
			<string>,conlog</string>
			<key>abbreviationMode</key>
			<integer>0</integer>
			<key>creationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>label</key>
			<string>console.log()</string>
			<key>modificationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>plainText</key>
			<string>console.log('%|');</string>
			<key>snippetType</key>
			<integer>0</integer>
			<key>uuidString</key>
			<string>CA223900-B0D2-11E6-8375-5F38640B11C1</string>
		</dict>
		<dict>
			<key>abbreviation</key>
			<string>,eprevent</string>
			<key>abbreviationMode</key>
			<integer>0</integer>
			<key>creationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>label</key>
			<string>PreventDefault</string>
			<key>modificationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>plainText</key>
			<string>e.preventDefault();</string>
			<key>snippetType</key>
			<integer>0</integer>
			<key>uuidString</key>
			<string>CA409670-B0D2-11E6-8375-5F38640B11C1</string>
		</dict>
		<dict>
			<key>abbreviation</key>
			<string>,objtemplate</string>
			<key>abbreviationMode</key>
			<integer>0</integer>
			<key>creationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>label</key>
			<string>Object Template</string>
			<key>modificationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>plainText</key>
			<string>var obj = {
  init: function( config ) {
    this.config = config;

    this.cache();
    this.bindEvents();

    //...
  },

  cache: function() {
    // this.container = $('div');
  },

  bindEvents: function() {
    // on click/change/etc methods
  }
}</string>
			<key>snippetType</key>
			<integer>0</integer>
			<key>uuidString</key>
			<string>CA53A940-B0D2-11E6-8375-5F38640B11C1</string>
		</dict>
		<dict>
			<key>abbreviation</key>
			<string>,usestrict</string>
			<key>abbreviationMode</key>
			<integer>0</integer>
			<key>creationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>label</key>
			<string>Use Strict</string>
			<key>modificationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>plainText</key>
			<string>'use strict';</string>
			<key>snippetType</key>
			<integer>0</integer>
			<key>uuidString</key>
			<string>CA7254D0-B0D2-11E6-8375-5F38640B11C1</string>
		</dict>
		<dict>
			<key>abbreviation</key>
			<string>,docready</string>
			<key>abbreviationMode</key>
			<integer>0</integer>
			<key>creationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>label</key>
			<string></string>
			<key>modificationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>plainText</key>
			<string>$(document).ready(function(){
	%|
});</string>
			<key>snippetType</key>
			<integer>0</integer>
			<key>uuidString</key>
			<string>CA90B240-B0D2-11E6-8375-5F38640B11C1</string>
		</dict>
		<dict>
			<key>abbreviation</key>
			<string>,siaf</string>
			<key>abbreviationMode</key>
			<integer>0</integer>
			<key>creationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>label</key>
			<string>selfInvokingFunction</string>
			<key>modificationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>plainText</key>
			<string>(function() {
  
}());</string>
			<key>snippetType</key>
			<integer>0</integer>
			<key>uuidString</key>
			<string>CAAEC190-B0D2-11E6-8375-5F38640B11C1</string>
		</dict>
		<dict>
			<key>abbreviation</key>
			<string>,es6objtemplate</string>
			<key>abbreviationMode</key>
			<integer>0</integer>
			<key>creationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>label</key>
			<string>Object Template ES6</string>
			<key>modificationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>plainText</key>
			<string>var %| = {
  init() {
    this.cache();
    this.bindEvents();
  }

  cache() {
    
  }

  bindEvents() {
    
  }
}</string>
			<key>snippetType</key>
			<integer>0</integer>
			<key>uuidString</key>
			<string>CABB1DA0-B0D2-11E6-8375-5F38640B11C1</string>
		</dict>
		<dict>
			<key>abbreviation</key>
			<string>,tmto</string>
			<key>abbreviationMode</key>
			<integer>0</integer>
			<key>creationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>label</key>
			<string>TweenMax.to</string>
			<key>modificationDate</key>
			<date>2016-11-22T16:43:33Z</date>
			<key>plainText</key>
			<string>TweenMax.to(%filltext:name=el%, %filltext:name=time:default=0.2%, {
  %|
});</string>
			<key>snippetType</key>
			<integer>0</integer>
			<key>uuidString</key>
			<string>CADC1320-B0D2-11E6-8375-5F38640B11C1</string>
		</dict>
	</array>
</dict>
</plist>
